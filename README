# Todo list Web API + user interface Assessment

The goal of this assessment is to implement a Todo List backend (API) and/or frontend (UI).
You don't have a deadline to finish it but keep in mind we will be evaluating how long you take to finish it plus deciding what are the must-haves to the health of the codebase and the application experience.

## General Recommendations

- Don't worry about the look and feel of the interface, you can use any component framework like Bootstrap.
- Please put your code on a Git host like Github/Gitlab/Bitbucket etc.
- Please provide clear steps on how to run your application in a README.md.
- Use a package manager (npm/yarn/pip/poetry/pipenv/composer etc...) and do not commit/upload your third party dependencies.
- Write some tests for the back-end and front-end, you don't need to cover the entire code base, decide what is more important to test.

## Backend exercise: Implement Todo List Web API

- Implement the TODO LIST API CRUD, pay attention to the API status code return.
- Persist your data using the database of your choice.

Remember that be able to run your project locally or access a demo page is a BIG bonus point.

## Frontend exercise:

- create an user interface for Todo List Web API
  Implement a UI against the CRUD, you can use https://getbootstrap.com or any other.

#### BONUS

###### Backend

- Add authentication to the backend.
- Use a Mongodb Free tier to persist your data.

###### Frontend

- Add authentication to the frontend.
